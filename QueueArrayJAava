public class Queue {
	int maxsize;
	int front, rear, nItem;
	int[] queArray;
	
	//Declaring The Variables.
	public Queue(int s){
		maxsize = s;
		front = 0;
		rear = -1;
		nItem = 0;
		queArray = new int[maxsize];
	}
	
	// Inserting Element from the QueueArray.
	public void insert(int j) {
		if(isFull()){
			System.out.println("Queue is Full!");
			return;
		}else if(rear == maxsize -1) {
			rear--;
		}
		queArray[++rear] = j;
		nItem++;
	}
	
	// Removing The Element From the QueueArray.
	public int remove() {
		int temp = -1;
		if(isEmpty()) {
			System.out.println("Queue is Empty!");
		}else {
			temp = queArray[front++];
			if(front == maxsize) {
				front = 0;
			}
			nItem--;
		}
		return temp;
	}
	
	// Checking if the Queue is Empty.
	public boolean isEmpty() {
		return (nItem == 0);
	}
	
	// Checking is the Queue is Full.
	public boolean isFull() {
		return (nItem == maxsize);
	}
	
	// Outputting the front Element.
	public int peek() {
		return queArray[front];
	}
	
	public static void main(String[] args) {
		Queue queue = new Queue(5);
		
		queue.insert(70);
		queue.insert(80);
		queue.insert(40);
		queue.insert(50);
		queue.insert(60);
		queue.insert(90);
		
		System.out.println("Javac QueueApp.java Java QueueApp");
		System.out.print(queue.remove()+ " ");
		System.out.print(queue.remove()+ " ");
		System.out.print(queue.remove()+ " ");
		System.out.print(queue.remove()+ " ");
		System.out.print(queue.remove()+ " ");

	}

}
